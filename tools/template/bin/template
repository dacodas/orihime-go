#!/bin/bash

template_functions() {
	< /dev/null > build/templated-functions

	while IFS="$(printf '\x1F')" read -a COLUMNS "-d$(printf '\x1E')"
	do 
		# echo "There are "${#COLUMNS[@]}" columns"

		FUNCTION_SIGNATURE="${COLUMNS[0]}" \
		PREPARATION="${COLUMNS[1]}" \
		SQL_STATEMENT="${COLUMNS[2]}" \
		ARGUMENTS="${COLUMNS[3]}" \
		envsubst < template/sql-insert-skeleton | tee -a build/templated-functions

		for COLUMN in "${COLUMNS[@]}"
		do 
			# echo "This column is ${#COLUMN} chars long"
			# echo "${COLUMN}"
			echo ""
		done
	done < build/function-skeletons.contracted

	cat template/preamble build/templated-functions > build/sql.go
}

main() {
	mkdir -p build

	./bin/separator-control contract \
		< src/function-skeletons.expanded \
		> build/function-skeletons.contracted

	template_functions

	cp ./build/sql.go ../../internal/database/sql.go
}

main
