func AddChildWord (word string,
	definition string,
	source string,
	user string,
	parentTextHash []byte) int64
wordId := AddWord(word, definition, source)
AddWordRelation(user, parentTextHash, wordId)



func AddText (contents string,
	source string) int64
textHash := sha256.Sum256([]byte(contents))
INSERT INTO text (contents, hash, source)
SELECT
	? AS contents,
	? AS hash,
	source.id AS source
FROM source WHERE source.name = ?
contents, textHash[:], source
func AddWord(word string,
	definitionText string,
	source string) int64

definitionTextId := AddText(definitionText, source)
fmt.Println("Using", definitionTextId, "as the foreign key for this next word")

INSERT INTO word (word, definition)
VALUES (?, ?)
word, definitionTextId
func AddSource(source string) int64

INSERT INTO source (name) VALUES (?)
source
func AddWordRelation(userEmail string,
	parentTextHash []byte,
	wordId int64) int64

INSERT INTO word_relation (user, text, word)
SELECT
	user.id AS user,
	text.id AS text,
	? AS word
FROM user
INNER JOIN text ON text.hash = ?
WHERE user.email = ?
wordId, parentTextHash[:], userEmail
